如何评价中山大学vmatrix评测系统
6先让我讲个故事（没玩过知乎，应该是这个套路吧）2016年4月1日，没错，就是愚人节那一天晚上法师（某化名老师）希望能够完善Eden(原来由王老师主导开发的一个很厉害的在线系统)，其实之前就一直做过这方面的东西，也实现过一个超级简陋的OJ：ghostbody/Yejq-online-judge（这个东西我已经懒得维护，已弃坑，当时太年轻很多问题没考虑）其实一开始法师是想我把原来eden的代码架构搞清楚然后在那个基础上继续开发完善的。但是当我打开那堆代码时候是崩溃的，当时eden的架构是django的重量型架构，非常传统的web架构，前后端在一起。随便打开一个控制器，卧槽，几千行几千行的代码，而且各种字符串拼接，各种函数调用。最让人崩溃的是，数据库表，一共120多张吧，里面的存储结构非常混乱，各种数据冗余不在话下。只成功启动了eden的系统，后来发现这份代码不是最新的 = =。以上说的这些仅仅只是开发人员看到的外表而已，实际上这并不影响eden是一个非常优秀的系统，至少在国内这就是首创。我甚至认为在很多方面eden都比matrix优秀太多，比如他支持“白盒测试覆盖了”的题目，也就是说学生看到的题目是一个程序，然后通过输入一些样例使得这个程序的覆盖绿尽可能高；还有就是大数据的题目，学生可以提交"hadoop"或者是"spark"的程序，eden可以通过后台的服务器集群跑出相应的结果，供大数据软件工程的学习，这个非常难得。即使对于matrix已经实现的编程题，也有很大一部分的idea是来源于eden的。那时候想都没想多少，我和家荣两个人就打算白手起家，重新自己搞一套这样的系统。现在想想当时真的是年轻，一腔热血，什么的都想追求更加优秀，更加完美。10分钟拍板技术栈，前端用angular，服务端用node，数据库mysql，评测系统用C++搞（当时迷信C++，= =），然后就开搞了。记得那时候差不多晚上23:30了，荣哥还在那里纠结怎么装gitlab，后来初期时候放弃了自己部署gitlab，用了线上的。这是第一版的matrix系统，系统只有三个子服务，一个SPA的web端，一个评测，一个数据库。当时的架构炒鸡简单，整个流程就是：web服务端收到学生提交的答案web端写到数据库评测系统定时轮询数据库(默认1s)web前端轮询数据状态评测评完写回数据库web前端显示评测结果当时团队的几个人，我、家荣和庆龙，再加上大四两个师兄和传设院一个设计师，当时印象最深刻的是，后台评测的进度很快，三下两下就搞完了，web进度就有点慢了。这个过程就是一个疯狂地去学习的过程，那时候荣哥像疯了一样，最后的搭出现在Matrix的前端基本架构。而且这个人真是神人，不用睡觉的，还读了一堆项目管理的书，引入现在Matrix管理项目的原型——敏捷开发Scrum和XP模型（永远相信，项目管理在团队中非常重要，这一点毋庸置疑）。植入一波Matrix日记里面的内容：做了不久，法师就跟我们说：“啊，我们现在这个系统能不能支持一下大四要毕业的同学的清考啊？”。当时也没想多少，卧槽，我们系统有了第一批用户，我们就一口答应没问题。结果2016年5月10日吧，我记得，那天晚上十几个清C和C++考试的师兄来到学院319，我们搬了两台台式机过去就做服务器，然后中间网络有问题，直接使用荣哥mac作为服务器。系统那天大概崩溃了1个多小时，然后才勉强可以使用，然后继续间断崩，然后又修。。。很艰难的一个晚上，那次又搞到了11点多吧Matrix考古截图，这个晚上之后吧，发现需求太多了，于是选择招了新的同学，就是现在大三的同学吧，很优秀，我记得很清楚我和荣哥亲自面试了大家 囧 = =。很惊讶地知道一个消息就是，原来王老师要走了，那时候才知道，很快eden也下线了。真的很遗憾，软件学院或者是中大的同学们又失去了一个很好的老师，真的很好。（大家可以了解一下中大老师的6年聘制度，此处不想多说 = =）从此软院没有了大数据软件工程这门课。不久之后法师就又问我们：“我们系统现在是不是可以支持我的两个C++班的期末考试了？”。当时也是很年轻，咬咬牙，做！因为我们就坑害了两个C++班的同学，此处应该诚挚跟你们说一声对不起。之后就是各种拿这两个班同学做“实验”，搞练习题，搞模拟考试，Matrix日记上写到：这是一段很悲惨的经历。我还记得那时候要举行所谓的“模拟考试”，但是在预定开始时间系统还是不能部署上线，之后就只能跳票了。当时整个团队是奔溃的，做了这么久这么辛苦，整个软件就差部署上线，跪在这一步，真的很扎心。Matrix团队日记：2016.06.21 15:00 大一期末考前的模拟测试 6月4日到6月21日这三个星期，是Matrix生长最快，但也是最昏天暗地的一段日子。 为什么说生长最快？在这三个星期，Matrix开发力量又一次壮大，加入了许多大三的同学；Matrix第一次有了自己的产品经理，从此项目内部管理有了条理；Matrix有了自己的设计师，弃用Angular Matrial后也能有美美的页面，Matrix的Web端不再是垂直开发，前后端分离实现了职责分离，让开发更加专注；Matrix的评测系统搞起了分布式评测，自己找主机拼凑起来，增加评测节点，提高评测效率。 但为什么说昏天暗地？因为，期末考来了。大二同学因为期末考的缘故基本不能参与开发，新加入的大三同学上手代码也还要学习时间，Matrix的开发告急！web端弃用Angular Material，css文件几乎要全手写，web端进度血崩；忘了，大三也是要期末考的，于是项目内部涌现出各种系统分析与设计分享会，软件测试分享会，一夜精通系分，一夜精通软测。21日上午，大三完成期末考试，下午就要面对难度仅次于大一期末考试的大一模拟考试。 但最后Matrix跳票了，跳过了这次模拟测试，这真是最黑暗的一天。 到了下午两点半，家荣开始尝试将现有系统部署到Eden服务器上，却一直部署失败不得解，尝试了将近一个小时，不行，继续尝试，还是不行。时间一分一秒地过去，早就过了模拟考开始的时间，但没有办法，大家都等待着部署成功。然而最后希望并没有出现，由于超过预计时间太久，最后内部决定跳票，将模拟考推迟到明天。大家是什么心情自不必说，为了这次模拟考，顶着考试的压力，通宵是常有的事。现在忽然说要跳票，师弟师妹们被放鸽子，我们的系统收到了极大的质疑。一切就仿佛努力没有回报，这个挫折一时让大家很挫败很失落。 总而言之，这次的严峻问题吓坏了大家，老师也意识到，期末考决不能出现类似问题。于是，在接下来的两天，都进行了模拟考试，以保证系统能够完整地支撑整个大一考试。部署失败的原因是Eden服务器是Centos系统，node_modules里的包不能兼容，最后将本地的node_modules复制到服务器上，问题得以解决。Matrix有了自己的产品经理和设计师Matrix评测系统完成初级分布式评测集群，3台主机构成Matrix的web端弃用Angular Material，改为纯手写CSSMatrix的web端前后端分离Matrix受到外界强烈质疑=======================分割线==============================如何优雅地在实验室通宵？要买够充足的物资，也就是买充足的吃的你需要有一张折叠床藏在实验室后面（因为学院会定时巡查然后收掉）如果是几个同学一起通宵时候，困到不行怎么办。这时候你需要收拾好实验室的桌子，然后优雅地躺在上面其他事项可咨询家荣同学，他比较在行=======================分割线结束=======================这个就是我们为了应对期末考试搭起来的评测集群，大概是10台小机器，小机器是i3的处理器，4G内存，没有SSD（借用了楼下的阮老师的实验室，多次因为功率问题导致实验室跳闸 = =）。当时分布式评测系统实现方案是用socket，用平均分发的算法。那时候调优的时间极其有限，我们那时候测试的方法也是非常粗暴，直接写一个脚本然后随机刷一定量的数据库任务。这导致发生了很多问题，比如网络链接老是超时断开，这个是通过柳哥眼动看着10个终端一发现问题马上重启来搞定。到最后甚至分布式称为影响效率的一个很大的问题。当然现在Matrix评测的后台架构跟这个已经不能同日而语了。（右下角评测大佬柳哥，现在是去了腾讯，膜）这是我大学难以忘记的一段经历（考试结束我们和机器的合照）之后我们完成了中级实训这个不在话下了。然后7~8月，Matrix开启了为期两个月的暑假马拉松式开发。每天基本上都是早上9点半到实验室，下午6点解散。与此同时，我去了深圳实习。可是心心念念的还是学校的团队。每个星期最让我最惬意的事情就是坐上周五晚上18:45到广州的班车，听着歌，看着沿江高速的落日~然后到实验室和小伙伴们对进度，讨论。（很想吐槽一下，来回深圳的车费也是敲贵）在这两个月，Matrix应该说是做了翻天覆地的变化，现在的微服务架构也就是这时候演化出来的。两个月下来，最终形成了v1.0版本的Matrix吧到了开学之后，真的是顺利地支持下来了这么多程序设计课程，虽然bug很多，需求很不完善。。。开学之后是团队一个很低迷的时期：团队成员也是要上课的，课程压力也是不小的（各种课程作业、project等等）荣哥去了北京实习那时候我是选择了从腾讯离职回来团队，那时候真的感觉维持下去很艰难。。。很感谢小伙伴陪我一起走下来了。之后就是期中考试了，到这个时候Matrix向学校申请了很久的机器很批不下来，没办法，硬着头皮，继续搭小机器。这次考虑到上次很多问题，于是摆成了这样：期中考试前面一大段时间都是没事的，我们都说：“这波稳了！”谁知道就这么毒奶一下，最后十分钟全盘GG。我亲眼目睹数据库CPU直接飙升到790%多，对于一个8核的CPU这意味着啥 = =。然后Matrix的整个架构全盘奔溃，服务器都连不上，整个让人很崩溃。最后只能等待一段时间后就自然恢复了，这次给我们很大的教训。（人生有时候就是这么的辛酸）当然后面我们就有了机柜还有很强大的刀片服务器集群（其实就6台）期末考试没啥好说的，基本上真的很稳了（这个还得待定，到了现在系统还有不少问题）。当然了，去年寒假当然也是有大开发的，也就是当前的2.0版本。也就是这个版本：这个主页我写的，不爽来打我 ╮(╯▽╰)╭之后又经历了研究生复试，又经历了连续几天通宵开发。最终还是给大家带来很相对稳定的服务了。This is matrix monitor:========================以上故事讲完==============================感觉很普通的一个故事，没有很传奇的经历。我感觉自己只是在对的时间和一群对的人，做了一件对的事吧。其实整个系统坐下来无非想让大家能够有一个更加好的学习平台吧。当初我们的设想是Matrix上能够看到自己的学习进步的历程，如何解决一个一个编程问题，然后把这些知识串联起来（= = 你可以看到现在用户成就那里还是空着的）。其实一个OJ(Online Judge System)和一个编程学习平台（Programming Learning Platform）很多时候是不一样的。编程学习平台应该是OJ的扩展，能够通过更加友好的方式引导同学们学习编程。可能很多大佬很强，高中时候就是学过编程，或者领悟能力拔群，一学就会。但是，你要考虑其他同学的感受。我认识过一些同学，他们在上大学前家里是不给他们用电脑的，认为这是耽误学习，因为他们可能是在上大学时候才接触计算机相关知识。我不否认SOJ等著名OJ是很出名很厉害的系统，但是我认为他们更加适合ACMers去使用，或者是其他有追求的同学。但是，对于一个刚刚学习编程的同学，做一个整数加法，很简单的一题的时候，看到一个“Wrong Answer”不知所措的时候，内心是崩溃的。对于一个学习C++的同学来说，只会new，不知道delete，而且这些OJ也不去管内存泄漏这些C++很重要的问题时候，这样的编程教学毫无意义。又或者说你们经常吐槽的静态检查也好，谷歌代码风格检查也好，这些都是为了编程学习而设置的。此处要自我反省一下，在上学期和上上学期做TA时候，很多时候因为开发、实习等复合原因很难兼顾到同学们，以至于我有大堆的QQ和邮件没有回，鄙人深感愧疚。= =============================我是分割线========================转眼就快要毕业了，对于Matrix还是依依不舍。我们不仅仅是做了一个系统，还有有很多组织过程的经验和很好的团队文化。整个宏观软件开发过程，从分析需求-&gt;.....-&gt;上线运维+持续迭代Matrix系列分享会，无论是面向学院的，还是Matrix内部的。我觉得，热情和分享应该是Matrix最大的精神财富。（此处打个广告，等5月份荣哥从北京回来，我们会做毕业前最后一次分享，主题就是 Matrix系统架构的演化）接手下去的同学们啊，做Matrix其实是要做很巨大的牺牲的，但是我还是希望这个团队能够继续维持下去，也许到多年以后我回来之后，依然有幸参加Matrix分享会。我们卑微的聚集，是一个伟大的开端。以上
 Matrix 是中大的一个在线课程管理系统（含OJ，考试等），经常被中大计算机类的同学戏称为 “土豆网” ，服务器是土豆电池做的 不过确实，Matrix 在初期的体验并不是很愉快。 在 Matrix 做过一点微小的工作，希望能通过这个回答，给大家一个新的印象。 就此说下 Matrix 用到的一些技术，主要是以服务端（Node）和前端为主。一、系统架构方面 Matrix 的系统架构划分，采用 SOA 架构，充分解耦，同时对访问压力大的服务做了分布式。整体的架构是比较合理的。 除了这四层之外，也用过一些额外部分的缓存策略，如 Redis缓存二、前端 前后端分离，生产环境代理到测试服务器的 Node 服务。方便开发与测试。 前端技术栈，以 AngularJs 为主，采用 Bootstrap 的CSS库。整体的项目代码由 Gulp 来实现项目自动化构建，包括转义 Jade，Sass，生成 Source Map，合并JS等等，同时区分开发环境和线上环境，配置 Web Hook 来实现自动化部署。 前后端代码都采用 ES6，由 Babel 转义 ES6 为 ES5 来提高兼容性。三、服务端（中间层） 服务端采用的 Nodejs。虽然选择的是 Express，但也会参考 Koa 中用到的一些技术（Co），例如把所有的服务端代码 Genrator 化。 整体的服务端是一个 MVC 架构，采用 HTTPS，DB 由 Connection Pool 控制访问，保障数据库连接数量。由中间件对错误、数据库访问进行统一的处理，同时对用户操作进行记录。使用 Ajv 做接口参数校验，具备完整的单元测试代码。另外，每次服务端接口的上线，都要经过 Postman 测试。在 Web 安全方面，对 XSS，CSRF，SQL注入 等内容都有相应的处理。  线上环境，由 PM2 来对 Node 服务进程进行管理。  整体的 Matrix 服务端，虽然只是一个中间层，但是很多的实践思路，跟阿里 Node 框架 Egg 是不谋而合的。  至于为什么用 NodeJs，是因为中间层本身就是一个 IO 密集型的服务，Node 依赖于 V8 和 libuv 的事件驱动开发，很适合这样的场景。而真正的操作，都封装成了一个个的后台服务（SOA架构），最后由 Node 来集成这些信息。四、其他系统服务其实前端跟服务端只是 Matrix 的一部分，其他的还有1、真正的后台服务文件服务（分布式）评测服务（分布式）Nginx代理服务抄袭检查服务安全验证服务...其实这里面很多都是跟前端和服务端同个难度级别的2、团队开发工具以及控制系统 同时为了团队开发，还有各类的 团队管理工具 和 Matrix服务管理系统。大部分时候，都是团队成员自己搭建的。包括 私有git仓库（Gitlab）、Console系统（评测队列管理，用户管理等）3、开发流程 从产品经理定需求，到前后端开发，到测试，到集成上线，Matrix 都有一个完整的流程。 开发分支的主线也是清晰的，区分线上分支，测试分支，特性分支，bug分支等等。4、监控系统除了服务，你可能不太相信， Matrix 还开发了 Monitor 系统，对每个服务进行监控，注意，是每个Web服务。从前端，到服务端，到 Nginx、文件服务、机器监控……五、关于 Matrix 团队Matrix 团队成员都是义务开发的，这点大家可能也知道，因为是一个校内团队，所以平时也需要兼顾学业，有很多同学可能还是课程助教，平时也是非常的忙。所以很多时候大家都是牺牲自己的假期时间来开发，特别是寒暑假。 在Matrix开发，除了技术上的成长，我还认识了很多的志同道合的同学，他们也非常优秀，有拿过国奖的，有已经保研的，有在腾讯、阿里、网易游戏实习的，也有早早就参加过创业团队的，更重要的是，我在他们身上，我都看到了对技术的热情！他们都在告诉着我，自己还需要努力，还要保持学习。 因为 Matrix 就是这样的一群人，这样的一个团队。六、最后 打个广告，在 Matrix 呆了快一年，做了很多，学到了很多，也凭借这些经历以及知识找到了一份比较满意的实习。在此，希望有兴趣开发 Matrix 的同学，想提升自己技术能力的同学，加入我们～
由于这个回答：如何评价中山大学vmatrix评测系统？ - 知乎，无法评论，所以只能在这里回答了，顺便艾特这位同学： @africamonkey 以下言辞风格不太知乎，望包涵。

引起你的不满，我十分抱歉。

我是这个分享会的主讲人，PPT 也是我做的，措辞可能很有问题，当时写好了演讲稿之后再做 PPT 的，时间比较仓促。

看了这个回答，其实有一点误解的成分在里面。

引起误会的应该在以上 PPT 的第三点：“第三，校 ACM 队目前是有意愿跟我们合作，将 Sicily 的题目全部迁移到 Matrix 中来，只是我们觉得 Matrix Course 不适合用来做这个事情”。

我针对这一点，来说明一下我措辞的不恰当之处。

首先说一下得到这个说法的背景。

Matrix Exam 系统在支持 2017 年研究生入学考试上机考试的时候，万海老师、林翰老师、还有我，都同时在考场监考。我重新求证了一下万海老师的说法，万海老师说的是，林翰老师对我们 Matrix 的考试系统十分感兴趣，看以后有没有办法让 Matrix 开发团队和 Sicily 系统达成一种合作方式，实现资源的共享，如果时机成熟，实际上可以将 Sicily 上的题目数据迁移到 Matrix 系统。

当时万海老师跟我提出这个事情的时候，我阐述的想法是：

1. 目前的 Matrix 课程系统，是不适合做这个事情的，因为 Matrix 课程系统设计之初，就是为了课程教学之用，让老师更方便地出题、改题，并且能统计学生的做题情况
2. 而 Sicily，更像是一个 ACMer 们的训练场，不是很适合教学之用
3. 而且，当时我们问过使用系统的老师的意见，他们都不想将他们自己的题库公开出去

基于这三点，我得出了这样的结论：Matrix Course 并不适合作为一个类似 Sicily 的 OJ 系统。

这里要澄清的一点是，并不是拒绝，而是目前我认为还没有达到一个跟 Sicily 进行资源共享或者合作开发的一个时机。

说完了背景，我就说一下措辞的不恰当之处。

1. 实际上并不是校 ACM 队跟我们合作，按照万海老师的说法，应该说 Sicily 系统。造成这个误解是因为，我以为 Sicily 是校 ACM 队维护的，跟 Sicily 之间的资源共享，自然就是跟校 ACM 队合作了。对此我表示抱歉
2. “合作” 一词我不应该使用，因为这一切都是万老师和林老师口头上的讨论而已，理应不能上升到“合作”的程度。对此我表示抱歉
3. 我所认为的 Matrix Course 不适合做这个事情，真的不是拒绝的意思，我是基于 Matrix 整个设计思想来做出这个结论的。因为 Matrix Course 不适合，所以我们才启动了 Matrix OJ 的项目，来解决 Sicily 没有解决的问题，而且我们有足够的人员、技术储备、计算资源来做好这个事情

还有一点要声明的是，Matrix OJ 只是想解决一些问题，并没有说有取代 Sicily 的意思。我们一切的出发点，都是希望能为学院的教学和同学们的学习做一些微小的贡献。

我们对校 ACMer 的人的态度，都是带有一种崇拜的感觉在里面的，我们对你们的算法能力都是十分敬佩和仰慕的。如果要比较校 ACM 队和 Matrix，我这个类比不知道恰当不恰当：你们就像是台上一分钟，台下十年功的幕前光鲜艳丽的幕前人员；而我们更像是幕后到处折腾、跑来跑去、默默地做一些事情的幕后人员。

说实话，我们很民间很山寨，我们只是做了一些让学院大部分同学和部分老师都得到了便利的事情。

但有一点我认为是共通的，那就是，我们做的都是同一个事情，都是为了学院、学校做出一些贡献。Sicily 与 Matrix 不应该是一种敌对或者竞争的关系，我们更需要的是找到一种互利共赢的合作方式。

以上就是我的观点，再次重申，引起不必要的误解，我真的十分抱歉。

2017/4/20我今天一定要来吐槽一下这个，真的有意义？？？为了过你的OCLINT非要把变量名都改成三个字母的，本来清晰简洁的代码就会变得乱七八糟的。这个静态分析真的能提高什么代码质量吗？我们又不是在写工程，凭什么不能用简洁明了的方式写了？我又不给别人看代码，凭什么不能用自己习惯的写法了？（用位运算代替一些逻辑）为了找到那些几乎不会写代码的人的潜在BUG这样降低用户体验真的好？另外有评论说Safari可以用了的，我昨天试过了，不能用。原回答本来其实有很多想吐槽的
听说团队是义务做的
那也就没什么好说的了
何况现在做的也基本用着不会特别不适了
（原来我们交了那么多学费我们院还是很穷TuT）bug还是基本一直在修 虽然速度有点慢
比如那个奇怪的缩进最近才给修好
服务器听说是学校支持购入了很多台
所以现在不会像当初那样一考试就爆炸了说起来那个static check还是有大bug的啊
具体是啥我就不说了
因为其实我很喜欢那个bug_(:3」∠)_还有就是记得登录时间久了会自动退出
而编辑过没提交的代码不会给你保存
不知道这个bug修复没有 当时气的我摔电脑……UI的话现在也是看着还行的状态吧
明明有传设院的大大在团队里为什么不能把UI做的像tyvj（和他的兄弟vijos）一样好看呢
虽然pku zju那种高端学府的oj长得更丑
但是……_(:3」∠)_强行限制浏览器这个事我也很不服啊
你挂掉IE还是情有可原的
Safari到底是怎么了总是受人鄙视TuT（说好的不吐槽还是开始吐槽了……）啊其实上学期本来还想去给他们干干活结果被教育了一番 不让去 哭哭
作为一个饱受eden摧残的中大学子，我本身觉得matrix 就是学生的救星，你可能没经历过期末考试交一次作业得等半个多小时才能出结果的恐惧，而且评测队列在期末考试可以达到400多，当你交上去的代码，等了半个多小时，好不容易出结果，结果你少打一个分号编译错误，你猜猜我当时在想什么，而matrix 彻底改变了这点！他在各个方面都有优化，评测一次作业只需要等待几秒钟，考试的时候顺畅无比，也正因为对matrix 的喜爱，我在大三上学期也加入了matrix帮忙优化改bug ，当时才认识到matrix 是一个多么齐全，项目结构清晰明了而且模块很多的项目，而且前后端完全分离，开发是很有规范的，讲真，正如我们的大佬家荣说的，matrix 他本身的架构已经算得上企业级的了，这点我也十分赞同（最近有去一些公司实习打酱油）所以总的来说，我觉得matrix真的很不错，我也为我能为matrix尽点力很自豪
图片侵删不过作为中大新生来说，这个系统还是很友好的，毕竟输入输出都看得到，不像大部分oj，只有wa、tle这些提示。。让起步的人更容易上山和debug吧。
做出一个OJ不难，但是要坚持做下去最重要。希望你们的团队对系统不断完善，保证文档齐全且每年都有人维护。
试了下我多年前的netid, 告诉我没有这个用户... 看来我是没办法试了...
好好奇这是啥，占坑先vpn连不了气哭了
Matrix评测系统只看评测的话，是做得不错的。可是，Matrix上面的题目，质量非常糟糕。我举一个简单的例子：这样的题，就放一个题目背景在这里，对题目要求只字不提。需要我们写什么函数？不说。每个函数是干什么的？不说。输入？不说。输出？不说。（反正我main.cpp丢上去了，自己看代码去。）这样子的题目毫无营养，毫无价值。没有明确的需求，全靠选手去猜。考试（期中考，2016学年第二学期，杨永红，程序设计II，计算机类）的时候也是这样，有些题目说得不清不楚，全靠猜。考试才3个小时，你不给我明确的题目叙述，我们猜来猜去，就连最顶尖的选手都没有做完。这样子这场考试还有何意义？还有这幅图：是谁给你的勇气说“ACM队想跟你合作，却被你们拒绝了”。Sicily的题目在我手上，你想要我还不给你呢！
写一个类似系统不难，但是坚持一年不断优化尝试加入各种工程方法还是值得尊敬的。楼上有些看不起这个系统的同学呀，可能看了这系统用的技术觉得也就这样，我也是。但是你写一个试试？直至目前，我仍觉得工程上的技术，很多也就那样，但是写出一个能让很多人用的东西，仅从编码上来讲，各种corner case就烦死你的。能写出一个demo，就以为接近终点了吗。最雷不过那个16毕业的师兄，他大概不知道现在的大一，计科，软工，都在用这个M系统。他不知道，是他老掉牙了。只是秀优越的话，说说你现在的岗位不是更到位？读研的话，秀秀你的学校咯。
强行答一波。去年入读计算机，刚刚好遇上了matrix的1.0版本，那个时候的matrix还非常不稳定，经常因为各种问题直接挂掉，埋怨声也非常多。但是接触完西西里，顿时感觉matrix实在是太良心了，界面好看，debug也非常不错，虽然对于那些长输出被收起来到more data还是比较不方便（希望这一点有所改进）。然后第二学期回来，matrix的界面又得到了更新，UI设计水平明显上去了，服务器出错的情况也变得非常少，大量功能也都在完善中，印象也逐渐好转。总的来说，毕竟作为一个校内项目，能做到这么良心的水平，也是非常不容易了。可能对于报错系统以及评测系统仍然有很多值得改进的地方，讨论系统感觉起来也是非常鸡肋，但是对matrix还是抱有信心的。给前面的TA以及开发matrix的前辈点个赞
一个可以占领机器人俱乐部实验室的优秀团队，溜 。
用得很不错，但是2.0的现在那个验证码很蛋疼→_→，又没那么多人盗号，还每次都要输入。希望是连续输入错误几次以后才有验证码
想起当年sicily，每次上交代码都只有Wrong answer、Compile error、Segmentation fault…这样的报错。vmatrix的报错多良心！据说现在学弟们都直接用matrix debug了，还不用自己编样例测试。
17年夏令营上机考试用到了。第一次用这个系统，至少少拿200分!
17研究生入学考试上机用的这个系统，我就觉得吧，都是同龄人，他们已经在写系统了，而我还得在同龄人写的系统上考试，佩服佩服。ps双选系统也是这个团队做的吧，逻辑比较迷，吐槽一下。。。。。。
第一次使用matrix是大一下机C++考，居然要我们写完后手动备份，提前下载网页，考到一半还崩溃了，不知道万海当时为什么一定拿我们当做不完善的系统的试验品呢，从此就对matrix留下不好印象。。大一大二实训使用时中规中矩，看得出来也有所改进，但用的少也没有什么使用感想了，虽然宣传上好像很给力（有点王婆卖瓜自卖自夸的感觉），效果。。。仁者见仁智者见智吧
匿名吐槽挺好的设想挺好的举动也有着稳定的维护团队有朝一日必成中大学子吹牛逼的成本之一只有一个槽点：能别把一看就能看到的bug一起发布出来吗？你可以改完放下个版本，不急的。PS：之前我看到一个bug是当页面调小时，悬浮在右边的一个框成功挡住了中间的关键信息。我不信这么明显你看不到。
太棒了有时候比编译器用得都舒服，出结果很快而且查错方便之前几次考试炸过了几次，但现在升级服务器了就好了很多可以随时随地编程然而已经有了对matrix的编程思想【无可奉告】
今年考研刚录取中大，复试机试就是用的这套系统，让我们最先用的这套系统（被当做实验小白鼠了）。占个坑，过会来答
作为一个作业提交次数随随便便10+的人来说   用matrix debug真的很爽……
只用过三次。第一次，大一期末考。全场出Bug，无法检测，有时候连题目都看不了。第二次，忘了。第三次，大二实训，无感。此团队非常"厉害"。为什么加引号，用过就知道了。